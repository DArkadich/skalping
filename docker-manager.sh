#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ –±–æ—Ç–∞ —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./docker-manager.sh [build|start|stop|restart|logs|status|clean|shell]

COMPOSE_FILE="docker-compose.yml"
SERVICE_NAME="scalping-bot"

case "$1" in
    build)
        echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
        docker-compose -f "$COMPOSE_FILE" build --no-cache
        if [ $? -eq 0 ]; then
            echo "‚úÖ –û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–∞"
            exit 1
        fi
        ;;
        
    start)
        echo "üöÄ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ .env —Ñ–∞–π–ª
        if [ ! -f ".env" ]; then
            echo "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
            echo "–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
            echo "python3 quick_setup.py"
            exit 1
        fi
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
        mkdir -p logs
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        docker-compose -f "$COMPOSE_FILE" up -d
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
            echo "üìä –°—Ç–∞—Ç—É—Å:"
            docker-compose -f "$COMPOSE_FILE" ps
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
            exit 1
        fi
        ;;
        
    stop)
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose -f "$COMPOSE_FILE" down
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
            exit 1
        fi
        ;;
        
    restart)
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose -f "$COMPOSE_FILE" restart
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
            exit 1
        fi
        ;;
        
    logs)
        echo "üìã –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $SERVICE_NAME..."
        docker-compose -f "$COMPOSE_FILE" logs -f "$SERVICE_NAME"
        ;;
        
    status)
        echo "üìä –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose -f "$COMPOSE_FILE" ps
        
        echo ""
        echo "üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
        docker-compose -f "$COMPOSE_FILE" top
        
        echo ""
        echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
        docker stats --no-stream
        ;;
        
    shell)
        echo "üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É $SERVICE_NAME..."
        docker-compose -f "$COMPOSE_FILE" exec "$SERVICE_NAME" /bin/bash
        ;;
        
    clean)
        echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
        
        read -p "‚ö†Ô∏è –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –æ–±—Ä–∞–∑—ã –∏ volumes. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
            docker-compose -f "$COMPOSE_FILE" down -v
            
            echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–∑—ã..."
            docker rmi $(docker images -q scalping-bot) 2>/dev/null || true
            
            echo "üßπ –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã..."
            docker system prune -f
            
            echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        else
            echo "‚ùå –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
        fi
        ;;
        
    update)
        echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞..."
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        docker-compose -f "$COMPOSE_FILE" down
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
        git pull origin main
        
        # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
        docker-compose -f "$COMPOSE_FILE" build --no-cache
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ
        docker-compose -f "$COMPOSE_FILE" up -d
        
        echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
        ;;
        
    monitor)
        echo "üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        if docker-compose -f "$COMPOSE_FILE" ps bot-monitor | grep -q "Up"; then
            echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
            echo "üåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080 –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
        else
            echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥..."
            docker-compose -f "$COMPOSE_FILE" up -d bot-monitor
            echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω"
            echo "üåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080 –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
        fi
        ;;
        
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {build|start|stop|restart|logs|status|shell|clean|update|monitor}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  build   - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑"
        echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
        echo "  logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  status  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "  shell   - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É"
        echo "  clean   - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ Docker —Ä–µ—Å—É—Ä—Å—ã"
        echo "  update  - –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –∏ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å"
        echo "  monitor - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  ./docker-manager.sh build    # –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑"
        echo "  ./docker-manager.sh start    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo "  ./docker-manager.sh logs     # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  ./docker-manager.sh status   # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        exit 1
        ;;
esac
